require "yard"

desc "noop task that is used by other tasks"

YARD::Rake::YardocTask.new(:yard_for_generate_documentation) do |task|
  task.files = ['vendor/bundle/ruby/**/gems/chef-utils*/lib/chef-utils/dsl/{architecture,platform,platform_family}.rb']
  task.options = ['--no-output']
end

desc "Generate helper documentation for chef-utils architecture helpers"

def install_gem_utils
  require "bundler"

  Bundler.with_clean_env do
    sh "bundle install --deployment"
  end
end

task architecture: :yard_for_generate_documentation do
  Encoding.default_external = Encoding::UTF_8

  require "chef-utils"
  require "fileutils"
  require "json"

  # make sure we have chef-utils files locally for yard inspection
  install_gem_utils

  doc_data = {}

  YARD::Registry.load!

  YARD::Registry.all(:method).to_a.each do |obj|
    doc_data[obj.name.to_s] = {}
    doc_data[obj.name.to_s]["prefix"] = obj.name.to_s
    doc_data[obj.name.to_s]["body"] = obj.name.to_s
    doc_data[obj.name.to_s]["description"] = obj.docstring
    doc_data[obj.name.to_s]["scope"] = "source.chef.recipe"
  end

  File.open("../snippets/chef-utils.json","w") do |f|
    f.write(JSON.pretty_generate(doc_data))
  end
end